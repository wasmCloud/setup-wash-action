name: "setup-wash-action"
description: "GitHub Action to install the wash CLI for wasmCloud development."
author: "wasmCloud"

branding:
  icon: "cloud-drizzle"
  color: "green"

# Define your inputs here.
inputs:
  wash-version:
    description: "The version of wash to install (default: latest), Examples: 0.51, 0.51.1, ^0.51, ~0.51, wash-v1.0.0-beta.5, latest"
    required: false
    default: "wash-v1.0.0-beta.7"

runs:
  using: "composite"
  steps:
    - name: Install wasm32-wasip2 target for Rust
      shell: bash
      run: |
        rustup target add wasm32-wasip2

    - name: Install wash with checksum verification
      shell: bash
      run: |
        set -euo pipefail

        WASH_VERSION="${{ inputs.wash-version }}"

        # Get latest version if specified
        if [ "$WASH_VERSION" = "latest" ]; then
          WASH_VERSION=$(curl -s https://api.github.com/repos/wasmCloud/wash/releases/latest | jq -r .tag_name)
        fi

        # Determine platform and architecture
        case "$RUNNER_OS" in
          "Linux")
            case "$RUNNER_ARCH" in
              "X64") BINARY_NAME="wash-x86_64-unknown-linux-musl" ;;
              "ARM64") BINARY_NAME="wash-aarch64-unknown-linux-musl" ;;
              *) echo "Unsupported Linux architecture: $RUNNER_ARCH" >&2; exit 1 ;;
            esac
            ;;
          "macOS")
            case "$RUNNER_ARCH" in
              "X64") BINARY_NAME="wash-x86_64-apple-darwin" ;;
              "ARM64") BINARY_NAME="wash-aarch64-apple-darwin" ;;
              *) echo "Unsupported macOS architecture: $RUNNER_ARCH" >&2; exit 1 ;;
            esac
            ;;
          "Windows")
            case "$RUNNER_ARCH" in
              "X64") BINARY_NAME="wash-x86_64-pc-windows-msvc" ;;
              *) echo "Unsupported Windows architecture: $RUNNER_ARCH" >&2; exit 1 ;;
            esac
            ;;
          *)
            echo "Unsupported operating system: $RUNNER_OS" >&2
            exit 1
            ;;
        esac

        echo "Installing wash ${WASH_VERSION} for ${RUNNER_OS}/${RUNNER_ARCH}"
        echo "Binary: ${BINARY_NAME}"

        # Create temporary directory for download
        TEMP_DIR=$(mktemp -d)
        cd "$TEMP_DIR"

        # Download binary and checksum
        DOWNLOAD_URL="https://github.com/wasmCloud/wash/releases/download/${WASH_VERSION}/${BINARY_NAME}"
        CHECKSUM_URL="https://github.com/wasmCloud/wash/releases/download/${WASH_VERSION}/${BINARY_NAME}.sha256"

        echo "Downloading wash binary from: $DOWNLOAD_URL"
        curl -fsSL -o "$BINARY_NAME" "$DOWNLOAD_URL"

        echo "Downloading checksum from: $CHECKSUM_URL"
        curl -fsSL -o "${BINARY_NAME}.sha256" "$CHECKSUM_URL"

        # Verify checksum
        echo "Verifying checksum..."
        if command -v sha256sum >/dev/null 2>&1; then
          sha256sum -c "${BINARY_NAME}.sha256"
        elif command -v shasum >/dev/null 2>&1; then
          shasum -a 256 -c "${BINARY_NAME}.sha256"
        else
          echo "Neither sha256sum nor shasum found. Cannot verify checksum." >&2
          exit 1
        fi

        echo "Checksum verification successful!"

        # Install binary
        chmod +x "$BINARY_NAME"
        if [ "$RUNNER_OS" = "Windows" ]; then
          mkdir -p "$HOME/.local/bin"
          mv "$BINARY_NAME" "$HOME/.local/bin/wash.exe"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        else
          sudo mv "$BINARY_NAME" /usr/local/bin/wash
        fi

        # Cleanup
        cd /
        rm -rf "$TEMP_DIR"

        # Verify installation
        echo "Installation complete. Verifying..."
        wash --version
